# import User from 'user.graphql'
# import Activity from 'activity.graphql'
# import Status from 'enums.graphql'

type Team {
  id: ID!
  createdAtMs: Int!
  updatedAtMs: Int!
  isActive: Boolean!
  name: String!
  description: String

  ### TEAMS ###
  # Relationships
  parentTeam: Team @relationship(type: "INCLUDES", direction: IN)
  childTeams: [Team!] @relationship(type: "INCLUDES", direction: OUT)
  # Queries
  ancestorTeams: [Team!]
    @cypher(
      statement: """
      MATCH (this)<-[:INCLUDES *0..]-(team:Team)
      RETURN team
      """
    )
  queryChildTeams(isActive: Boolean): [Team!]
    @cypher(
      statement: """
      MATCH (this)-[:INCLUDES]->(team:Team {isActive: $isActive})
      RETURN team
      """
    )
  queryDescendantTeams(isActive: Boolean): [Team!]
    @cypher(
      statement: """
      MATCH (this)-[:INCLUDES *1..]->(team:Team {isActive: $isActive})
      RETURN team
      """
    )

  ### USERS ###
  # Relationships
  admins: [User!]! @relationship(type: "ADMINISTERS", direction: IN)
  members: [User!]! @relationship(type: "WORKS_ON", direction: IN)
  subscribers: [User!] @relationship(type: "SUBSCRIBES_TO", direction: IN)
  # Queries
  activeInheritedAdmins: [User!]
    @cypher(
      statement: """
      MATCH (this)<-[:OWNS *0..]-(team:Team {isActive: true})<-[:ADMINISTERS]-(admin:User {isActive: true})
      RETURN admin
      """
    )
  queryAdmins(isActive: Boolean): [User!]!
    @cypher(
      statement: """
      MATCH (this)<-[:ADMINISTERS]-(admin:User {isActive: $isActive})
      RETURN admin
      """
    )
  queryMembers(isActive: Boolean): [User!]!
    @cypher(
      statement: """
      MATCH (this)<-[:WORKS_ON]-(member:User {isActive: $isActive})
      RETURN member
      """
    )
  activeDescendantMembers: [User!]
    @cypher(
      statement: """
      MATCH (this)-[:OWNS *1..]->(:Team {isActive: true})<-[:WORKS_ON]-(member:User {isActive: true})
      RETURN member
      """
    )
  activeInheritedSubscribers: [User!]
    @cypher(
      statement: """
      MATCH (this)<-[:OWNS *1..]-(:Team {isActive: true})<-[:SUBSCRIBES_TO]-(subscriber:User {isActive: true})
      RETURN subscriber
      """
    )
  querySubscribers(isActive: Boolean): [User!]
    @cypher(
      statement: """
      MATCH (this)<-[:SUBSCRIBES_TO]-(subscriber:User {isActive: $isActive})
      RETURN subscriber
      """
    )
  activeDescendantSubscribers: [User!]
    @cypher(
      statement: """
      MATCH (this)-[:OWNS *1..]->(:Team {isActive: true})<-[:SUBSCRIBES_TO]-(subscriber:User {isActive: true})
      RETURN subscriber
      """
    )

  ### ACTIVITIES ###
  # Relationships
  activities: [Activity!] @relationship(type: "OWNS", direction: OUT)
  # Queries
  activeInheritedActivities: [Activity!]
    @cypher(
      statement: """
      MATCH (this)<-[:OWNS *1..]-(:Team {isActive: true})-[:OWNS]->(activity:Activity {isActive: true})
      RETURN activity
      """
    )
  queryActivities(isActive: Boolean): [Activity!]
    @cypher(
      statement: """
      MATCH (this)-[:OWNS]->(activity:Activity {isActive: $isActive})
      RETURN activity
      """
    )
  activeDescendantActivities: [Activity!]
    @cypher(
      statement: """
      MATCH (this)-[:OWNS *1..]->(:Team {isActive: true})-[:OWNS]->(activity:Activity {isActive: true})
      RETURN activity
      """
    )
}
